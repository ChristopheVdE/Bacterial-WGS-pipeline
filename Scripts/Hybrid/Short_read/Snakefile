############################################################################################################
#NAME:  SNAKEMAKE
#AUTHOR: Christophe Van den Eynde
#RUNNING: Hybrid assembly short read preparation
#USAGE: $snakemake
############################################################################################################

#SNAKEMAKE RUN PREPARATION==================================================================================
# GET INFO FROM HOST----------------------------------------------------------------------------------------
try:
    from datetime import date
    Run = date.today().strftime("%Y%m%d")
    env = open("/home/Pipeline/Hybrid/"+Run+"/environment.txt","r")
    for line in env.readlines():
        if "Results_m=" in line:
            Results_m = line.replace("Results_m=",'').replace('\n','')
            Results_m = Results_m
        elif "Scripts_m" in line:
            Scripts_m = line.replace("Scripts_m=",'').replace('\n','')
        elif "Threads=" in line:
            Threads = line.replace("Threads=",'').replace('\n','')
        elif "Run" in line:
            Run = line.replace("Run=",'').replace('\n','')
    env.close()
except:
    print("The current date doesn't match the date at wich the analysis was started.\n \
    Restart the analysis from scratch (or rename the directory to the current date).")
#-----------------------------------------------------------------------------------------------------------

#GET SAMPLE IDS---------------------------------------------------------------------------------------------
ids = []
samples = open("/home/Pipeline/Hybrid/"+Run+"/sampleList.txt","r")
for line in samples.readlines():
    ids.append(line.replace('\n',''))
samples.close()
#-----------------------------------------------------------------------------------------------------------
#===========================================================================================================

#SNAKEMAKE RUN==============================================================================================
#-----------------------------------------------------------------------------------------------------------
# Master rule, controls all other rule executions

rule all:                                                                       
    input:
        expand("/home/Pipeline/Hybrid/{Run}/Short_reads/{id}/01_QC-Rawdata/QC_MultiQC/multiqc_report.html",Run=Run,id=ids),                            
        expand("/home/Pipeline/Hybrid/{Run}/Short_reads/{id}/03_QC-Trimmomatic_Paired/QC_MultiQC/multiqc_report.html",Run=Run,id=ids),                                                                    
    message:
        "Analysis done, results can be found in {Results_m}"

#-----------------------------------------------------------------------------------------------------------
# Pipeline step1: copy/move files from raw data folder to 'Sample_id/00_Rawdata/' in the analysis-results folder
# executed in get_environment.py

#-----------------------------------------------------------------------------------------------------------
# Pipeline step2: running fastqc on the raw-data in the current-analysis folder

rule fastqc_raw:
    input:
        expand("/home/Pipeline/Hybrid/{Run}/Short_reads/{id}/00_Rawdata/{id}_L001_R1_001.fastq.gz",Run=Run,id=ids),  #the rawdata (output copy_rawdata rule)
        expand("/home/Pipeline/Hybrid/{Run}/Short_reads/{id}/00_Rawdata/{id}_L001_R2_001.fastq.gz",Run=Run,id=ids)   #the rawdata (output copy_rawdata rule)
    output:
        expand("/home/Pipeline/Hybrid/{Run}/Short_reads/{id}/01_QC-Rawdata/QC_FastQC/{id}_L001_R1_001_fastqc.html",Run=Run,id=ids),
        expand("/home/Pipeline/Hybrid/{Run}/Short_reads/{id}/01_QC-Rawdata/QC_FastQC/{id}_L001_R2_001_fastqc.html",Run=Run,id=ids)
    message:
        "Analyzing raw-data with FastQC using Docker-container fastqc:v2.2_stable"
    shell:
        'docker run -it --rm \
        --name fastqc_raw \
        -v "{Scripts_m}:/home/Scripts/" \
        -v "{Results_m}:/home/Pipeline/" \
        christophevde/fastqc:v2.2_stable \
        /bin/bash -c "dos2unix /home/Scripts/Hybrid/Short_read/QC01_FastQC_Raw.sh \
        && /home/Scripts/Hybrid/Short_read/QC01_FastQC_Raw.sh {Run} {Threads}"'

#-----------------------------------------------------------------------------------------------------------
# Pipeline step3: running multiqc on the raw-data in the current-analysis folder

rule multiqc_raw:
    input:
        expand("/home/Pipeline/Hybrid/{Run}/Short_reads/{id}/01_QC-Rawdata/QC_FastQC/{id}_L001_R1_001_fastqc.html",Run=Run,id=ids),    #output fastqc rawdata
        expand("/home/Pipeline/Hybrid/{Run}/Short_reads/{id}/01_QC-Rawdata/QC_FastQC/{id}_L001_R2_001_fastqc.html",Run=Run,id=ids)     #output fastqc rawdata
    output:
        expand("/home/Pipeline/Hybrid/{Run}/Short_reads/{id}/01_QC-Rawdata/QC_MultiQC/multiqc_report.html",Run=Run,id=ids)             #Results MultiQC for each sample separately
    message:
        "Analyzing raw-data with MultiQC using Docker-container multiqc:v2.2_stable"
    shell:
        'docker run -it --rm \
        --name multiqc_raw \
        -v "{Scripts_m}:/home/Scripts/" \
        -v "{Results_m}:/home/Pipeline/" \
        christophevde/multiqc:v2.2_stable \
        /bin/bash -c "dos2unix /home/Scripts/Hybrid/Short_read/QC01_MultiQC_Raw.sh \
        && /home/Scripts/Hybrid/Short_read/QC01_MultiQC_Raw.sh {Run}"'

#-----------------------------------------------------------------------------------------------------------
# Pipeline step4: Trimming

rule Trimming:
    input:
        expand("/home/Pipeline/Hybrid/{Run}/Short_reads/{id}/00_Rawdata/{id}_L001_R1_001.fastq.gz",Run=Run,id=ids),          #the rawdata (output copy_rawdata rule)
        expand("/home/Pipeline/Hybrid/{Run}/Short_reads/{id}/00_Rawdata/{id}_L001_R2_001.fastq.gz",Run=Run,id=ids),          #the rawdata (output copy_rawdata rule)
        expand("/home/Pipeline/Hybrid/{Run}/Short_reads/{id}/01_QC-Rawdata/QC_MultiQC/multiqc_report.html",Run=Run,id=ids)   #output multiqc raw (required so that the tasks don't run simultaniously and their outpur gets mixed in the terminal)
    output:
        expand("/home/Pipeline/Hybrid/{Run}/Short_reads/{id}/02_Trimmomatic/{id}_L001_R1_001_P.fastq.gz",Run=Run,id=ids),
        expand("/home/Pipeline/Hybrid/{Run}/Short_reads/{id}/02_Trimmomatic/{id}_L001_R2_001_U.fastq.gz",Run=Run,id=ids)
    message:
        "Trimming raw-data with Trimmomatic v0.39 using Docker-container trimmomatic:v2.2_stable"
    shell:
        'docker run -it --rm \
        --name trimmomatic \
        -v "{Scripts_m}:/home/Scripts/" \
        -v "{Results_m}:/home/Pipeline/" \
        christophevde/trimmomatic:v2.2_stable \
        /bin/bash -c "dos2unix /home/Scripts/Hybrid/Short_read/02_runTrimmomatic.sh \
        && /home/Scripts/Hybrid/Short_read/02_runTrimmomatic.sh {Run} {Threads}"'

#-----------------------------------------------------------------------------------------------------------
# Pipeline step5: FastQC trimmed data (paired reads only)

rule fastqc_trimmed:
    input:
        expand("/home/Pipeline/Hybrid/{Run}/Short_reads/{id}/02_Trimmomatic/{id}_L001_R1_001_P.fastq.gz",Run=Run,id=ids), #output trimmomatic
        expand("/home/Pipeline/Hybrid/{Run}/Short_reads/{id}/02_Trimmomatic/{id}_L001_R2_001_U.fastq.gz",Run=Run,id=ids)  #output trimmomatic
    output:
        expand("/home/Pipeline/Hybrid/{Run}/Short_reads/{id}/03_QC-Trimmomatic_Paired/QC_FastQC/{id}_L001_R1_001_P_fastqc.html",Run=Run,id=ids)
    message:
        "Analyzing trimmed-data with FastQC using Docker-container fastqc:v2.2_stable"
    shell:
        'docker run -it --rm \
        --name fastqc_trim \
        -v "{Scripts_m}:/home/Scripts/" \
        -v "{Results_m}:/home/Pipeline/" \
        christophevde/fastqc:v2.2_stable \
        /bin/bash -c "dos2unix /home/Scripts/Hybrid/Short_read/QC02_FastQC_Trim.sh \
        && /home/Scripts/Hybrid/Short_read/QC02_FastQC_Trim.sh {Run} {Threads}"'

#-----------------------------------------------------------------------------------------------------------
# Pipeline step6: MultiQC trimmed data (paired reads only) 

rule multiqc_trimmed:
    input:
        expand("/home/Pipeline/Hybrid/{Run}/Short_reads/{id}/03_QC-Trimmomatic_Paired/QC_FastQC/{id}_L001_R1_001_P_fastqc.html",Run=Run,id=ids)      #output fastqc trimmed data
    output:
        expand("/home/Pipeline/Hybrid/{Run}/Short_reads/{id}/03_QC-Trimmomatic_Paired/QC_MultiQC/multiqc_report.html",Run=Run,id=ids)
    message:
        "Analyzing trimmed-data with MultiQC using Docker-container multiqc:v2.2_stable"
    shell:
        'docker run -it --rm \
        --name multiqc_trim \
        -v "{Scripts_m}:/home/Scripts/" \
        -v "{Results_m}:/home/Pipeline/" \
        christophevde/multiqc:v2.2_stable \
        /bin/bash -c "dos2unix /home/Scripts/Hybrid/Short_read/QC02_MultiQC_Trim.sh \
        && /home/Scripts/Hybrid/Short_read/QC02_MultiQC_Trim.sh {Run}"'
#===========================================================================================================